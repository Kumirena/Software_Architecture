openapi: 3.0.3
info:
  title: messenger service 3.0
  description: |-
    API сервис индентификация в messenger.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://localhost:8080
tags:
  - name: User
    description: Контроллер пользователя.
    
 
    
paths:
  /User:
    put:
      tags:
        - User
      summary: Обновить пользователя
      description: Обновить пользователя
      operationId: updateUser
      requestBody:
        description: Обновляет существующего пользователя в БД
        content:
          application/json: 
            schema: 
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
        '405':
          description: Validation exception
          
    post:
      tags:
        - User
      summary: Добавить пользователя
      description: Добавить пользователя в базу
      operationId: addUser
      requestBody:
        description: Создание нового пользователя в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
  
  /User/findById/{userId}:
    get:
      tags:
        - User
      summary: Найти пользователя по ID
      description: вернуть одного пользователя
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
          
  /User/deleteById/{userId}:      
    delete:
      tags:
        - User
      summary: Удаляет пользователя
      description: Удаляет пользователя
      operationId: deleteUser
      parameters:
        - name: userId
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid User value
        
 
   
components:
  schemas:
  
    User:
      required:
        - name
        - email
        - passHash
        
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        email:
          type: string
          example: somemail@mail.ru
        passHash:
          type: integer
          format: int64
          example: 23412
        name:
          type: string
          format: int64
          example: name
          
      xml:
        name: pet
  
    
   
  
  requestBodies:
  
    User:
      description: Данные пользователя
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
            